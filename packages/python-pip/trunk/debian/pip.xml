<?xml version='1.0' encoding='ISO-8859-1'?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" [

<!--

Process this file with an XSLT processor: `xsltproc \
-''-nonet /usr/share/sgml/docbook/stylesheet/xsl/nwalsh/\
manpages/docbook.xsl manpage.dbk'.  A manual page
<package>.<section> will be generated.  You may view the
manual page with: nroff -man <package>.<section> | less'.  A
typical entry in a Makefile or Makefile.am is:

DB2MAN=/usr/share/sgml/docbook/stylesheet/xsl/nwalsh/\
manpages/docbook.xsl
XP=xsltproc -''-nonet

manpage.1: manpage.dbk
        $(XP) $(DB2MAN) $<
    
The xsltproc binary is found in the xsltproc package.  The
XSL files are in docbook-xsl.  Please remember that if you
create the nroff version in one of the debian/rules file
targets (such as build), you will need to include xsltproc
and docbook-xsl in your Build-Depends control field.

-->

  <!-- Fill in your name for FIRSTNAME and SURNAME. -->
  <!ENTITY dhfirstname "<firstname>Jeff</firstname>">
  <!ENTITY dhsurname   "<surname>Licquia</surname>">
  <!-- Please adjust the date whenever revising the manpage. -->
  <!ENTITY dhdate      "<date>March 31, 2009</date>">
  <!-- SECTION should be 1-8, maybe w/ subsection other parameters are
       allowed: see man(7), man(1). -->
  <!ENTITY dhsection   "<manvolnum>1</manvolnum>">
  <!ENTITY dhemail     "<email>licquia@debian.org</email>">
  <!ENTITY dhusername  "Jeff Licquia">
  <!ENTITY dhucpackage "<refentrytitle>PIP</refentrytitle>">
  <!ENTITY dhpackage   "pip">

  <!ENTITY debian      "<productname>Debian</productname>">
  <!ENTITY gnu         "<acronym>GNU</acronym>">
  <!ENTITY gpl         "&gnu; <acronym>GPL</acronym>">
]>

<refentry>
  <refentryinfo>
    <address>
      &dhemail;
    </address>
    <copyright>
      <year>2009</year>
      <holder>&dhusername;</holder>
    </copyright>
    &dhdate;
  </refentryinfo>
  <refmeta>
    &dhucpackage;

    &dhsection;
  </refmeta>
  <refnamediv>
    <refname>&dhpackage;</refname>

    <refpurpose>install Python packages</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>&dhpackage;</command>

      <arg>command</arg>

      <arg>options</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>DESCRIPTION</title>

    <para>This manual page documents briefly the
      <command>&dhpackage;</command>
      command.</para>

    <para>This manual page was written for the &debian; distribution
      because the original program does not have a manual page.</para>

    <para><command>&dhpackage;</command> is an alternative Python package installer.  It performs
    the same basic job as easy_install, but with some extra features.
    It can work with version control repositories (currently only Git,
    Mercurial, and Bazaar repositories), logs output extensively,
    and prevents partial installs by downloading all requirements before
    starting installation.</para>

    <para>It has some disadvantages when compared to easy_install.  It
    does not use egg files, although it does preserve egg metadata.
    Some setuptools features are not yet supported, and some custom
    setup.py features won't work.</para>

    <para><command>&dhpackage;</command> is designed to work with virtualenv, in that it can be
    given the path to a virtualenv environment (with -E or
    --environment) and it will know to install to that environment
    instead of the system locations.</para>

  </refsect1>
  <refsect1>
    <title>COMMANDS</title>

    <para>The command comes before any options.  The following
    commands are recognized:</para>

    <variablelist>
      <varlistentry>
        <term>help</term>
        <listitem>
          <para>Show the help text.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>bundle</term>
        <listitem>
          <para>Create "bundles" which can be used by <command>&dhpackage;</command> to install
          the group of Python packages in multiple places.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>freeze</term>
        <listitem>
          <para>Write the current list of installed packages to a
          requirements file, which can be used by <command>&dhpackage;</command> to reinstall the
          same set of packages.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>install</term>
        <listitem>
          <para>Install packages.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>unzip</term>
        <listitem>
          <para>Unzip an individual package.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>zip</term>
        <listitem>
          <para>Zip an individual package.</para>
        </listitem>
      </varlistentry>
    </variablelist>

  </refsect1>
  <refsect1>
    <title>OPTIONS</title>

    <para>These programs follow the usual &gnu; command line syntax,
      with long options starting with two dashes (`-').  A summary of
      options is included below.</para>

    <variablelist>
      <varlistentry>
        <term><option>-h</option>
          <option>--help</option>
        </term>
        <listitem>
          <para>Show summary of options.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <option>--version</option>
        </term>
        <listitem>
          <para>Show version of program.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-v</option>
	  <option>--verbose</option>
	</term>
	<listitem>
	  <para>Be more verbose.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-q</option>
	  <option>--quiet</option>
	</term>
	<listitem>
	  <para>Be less verbose; suppress unimportant output.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><option>-E</option>
	  <option>--environment</option>
	</term>
	<listitem>
	  <para>When using <command>&dhpackage;</command> with a virtual environment created by
	  virtualenv, use this option to specify either the path to
	  the environment or the path to its Python interpreter.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <option>--log</option>
	</term>
	<listitem>
	  <para>Output a log file describing the actions taken to the
	  specified file.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <option>--proxy</option>
	</term>
	<listitem>
	  <para>Have <command>&dhpackage;</command> use a proxy server to access sites.  This can
	  be specified using "user:password@proxy.server:port"
	  notation.  If the password is left out, <command>&dhpackage;</command> will ask for
	  it.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  <option>--timeout</option>
	</term>
	<listitem>
	  <para>Set the timeout for connecting to download sites, in
	  seconds.  This defaults to 15 seconds if not given.</para>
	</listitem>
      </varlistentry>
    </variablelist>
  </refsect1>
  <refsect1>
    <title>SEE ALSO</title>

    <para>The upstream documentation, stored in 
      /usr/share/doc/python-pip.</para>
  </refsect1>
  <refsect1>
    <title>AUTHOR</title>

    <para>This manual page was written by &dhusername; &dhemail; for
      the &debian; system (but may be used by others).  Permission is
      granted to copy, distribute and/or modify this document under
      the terms of the &gnu; General Public License, Version 2 any 
	  later version published by the Free Software Foundation.
    </para>
	<para>
	  On Debian systems, the complete text of the GNU General Public
	  License can be found in /usr/share/common-licenses/GPL.
	</para>

  </refsect1>
</refentry>
